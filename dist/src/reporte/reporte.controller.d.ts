import { ReportsModelService } from '../reporte/reporte-model.service';
import { Request, Response } from 'express';
export declare class ReportsController {
    private ad;
    private ReporteService;
    constructor(ad: any, ReporteService: ReportsModelService);
    getAllLecturaLimit(body: any, res: any): Promise<void>;
    getReportLecturaCategoriaLimit(body: any, res: any): Promise<void>;
    getAllComentarioLimit(body: any, res: any): Promise<void>;
    getAllComentariocategoriaLimit(body: any, res: any): Promise<void>;
    getAllBaseDatosLimit(body: any, res: any): Promise<void>;
    getAllBaseDatosCategoriaLimit(body: any, res: any): Promise<void>;
    getAllCambioLimit(body: any, res: any): Promise<void>;
    getAllCambioCategoriaLimit(body: any, res: any): Promise<void>;
    getAllUsuarioLimit(body: any, res: any): Promise<void>;
    getAllFinancieraLimit(body: any, res: any): Promise<void>;
    getAllObligatorioLimit(body: any, res: any): Promise<void>;
    getAllObligatorioCategoriaLimit(body: any, res: any): Promise<void>;
    getalllecturabypcrc(body: any): Promise<unknown[]>;
    getalllecturabycategoria(body: any): Promise<unknown[]>;
    getlecturatotal(body: any): Promise<any>;
    getlecturacategoriatotal(body: any): Promise<any>;
    getallcomentariobypcrc(body: any): Promise<unknown[]>;
    getallcomentariobycategoria(body: any): Promise<unknown[]>;
    getcomentariototal(body: any): Promise<any>;
    getcomentariocategoriatotal(body: any): Promise<any>;
    getallbasedatosbypcrc(body: any): Promise<unknown[]>;
    getallbasedatosbycategoria(body: any): Promise<unknown[]>;
    getbasedatostotal(body: any): Promise<any>;
    getbasedatoscategoriatotal(body: any): Promise<any>;
    getallcambiobypcrc(body: any): Promise<unknown[]>;
    getallcambiobycategoria(body: any): Promise<unknown[]>;
    getcambiototal(body: any): Promise<any>;
    getcambiocategoriatotal(body: any): Promise<any>;
    getallusuariobypcrc(body: any): Promise<unknown[]>;
    getusuariototal(body: any): Promise<any>;
    getAllCambio(body: any): Promise<unknown[]>;
    getAllBases(body: any): Promise<unknown[]>;
    getAllBasesCategory(body: any): Promise<any>;
    getAllBasesCategoryLimit(body: any): Promise<any>;
    getAllBasesPcrcLimit(body: any): Promise<any>;
    getAllBasesUsuario(body: any): Promise<unknown[]>;
    getAllBasesUsuarioLimit(body: any): Promise<any>;
    getAllLectura(body: any): Promise<unknown[]>;
    getalllecturabycategory(body: any): Promise<unknown[]>;
    getAllBasesLimit(body: any): Promise<any[]>;
    getCommentPcrc(req: any): Promise<unknown[]>;
    getCommentPcrcLimit(req: any): Promise<unknown[]>;
    getCategoriaById(id: any): Promise<unknown[]>;
    getTotalArticulo(body: any): Promise<unknown[]>;
    getTotalArticuloLimit(body: any): Promise<unknown[]>;
    getTotalFinancieraLimit(body: any, query: any): Promise<unknown[]>;
    getTotalFinanciera(body: any, res: Response): Promise<Response<any>>;
    getAllBasesPcrc(body: any, resp: Response): Promise<Response<any>>;
    getAllLecturaData(body: any, res: Response): Promise<Response<any>>;
    getAllComentarioData(body: any, res: Response): Promise<Response<any>>;
    getReportCambioData(req: Request, res: Response): Promise<Response<any>>;
    getReportCambioRemove(query: any, res: Response): Promise<Response<any>>;
    getReportlecuraRemove(query: any, res: Response): Promise<Response<any>>;
    getReportbaseRemove(query: any, res: Response): Promise<Response<any>>;
    getReportcomentarioRemove(query: any, res: Response): Promise<Response<any>>;
    getReportfinancieraRemove(query: any, res: Response): Promise<Response<any>>;
    depurarAllreport(res: Response): Promise<Response<any>>;
    getObligatorioPcrcLimit(body: any): Promise<any>;
    getObligatorioCategoryLimit(body: any): Promise<any>;
    getObligatorioTotal(body: any): Promise<{
        total_obligatorio: any;
        total_exportar: any[];
    }>;
    getObligatoriocategoriaTotal(body: any): Promise<{
        total_obligatorio: any;
        total_exportar: any[];
    }>;
}
